{"version":3,"sources":["Api.js","components/Restaurant.js","components/Restaurants.js","components/Card.js","components/Home.js","components/Cuisine.js","components/Cuisines.js","App.js","serviceWorker.js","index.js"],"names":["fetchCollections","_fetchCollections","apply","this","arguments","_callee","response","regenerator_default","a","wrap","_context","prev","next","axios","method","url","headers","user-key","content-type","sent","abrupt","data","collections","stop","fetchRestaurants","_fetchRestaurants","_callee2","_context2","restaurants","getCuisinesApi","_x","_getCuisinesApi","_callee3","query","cuisineResponse","_context3","concat","Restaurant","react_default","createElement","className","href","props","style","backgroundImage","image","backgroundSize","name","location","cuisines","Component","Restaurants","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","console","log","state","handleInputChange","setState","defineProperty","target","value","length","getCuisines","match","params","id","getCuisinesData","restaurantsCollection","map","one","components_Restaurant","restaurant","featured_image","key","locality_verbose","onSubmit","type","placeholder","aria-label","aria-describedby","onChange","react_router_dom","to","pathname","React","memo","Card","title","description","Home","cardCollection","card","components_Card","collection","collection_id","image_url","defaultProps","Cuisine","Cuisines","components_Cuisine","App","bind","assertThisInitialized","_this2","react_router","exact","path","render","components_Home","assign","components_Restaurants","components_Cuisines","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4f4307b2.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport async function fetchCollections() {\n  let response = await axios({\n    method: \"get\",\n    url: \"https://developers.zomato.com/api/v2.1/collections?city_id=306\",\n    headers: {\n      \"user-key\": \"b26f02984b714751b6c2f50247e4b9a8\",\n      \"content-type\": \"application/json\"\n    }\n  });\n  return response.data.collections;\n}\n\nexport async function fetchRestaurants() {\n  let response = await axios({\n    method: \"get\",\n    url: \"https://developers.zomato.com/api/v2.1/search?city_id=306\",\n    headers: { \"user-key\": \"b26f02984b714751b6c2f50247e4b9a8\" }\n  });\n\n  return response.data.restaurants;\n}\n\nexport async function getCuisinesApi(query) {\n  let cuisineResponse = await axios({\n    method: \"get\",\n    url: `https://developers.zomato.com/api/v2.1/search?entity_id=306&q=${query}`,\n    headers: { \"user-key\": \"b26f02984b714751b6c2f50247e4b9a8\" }\n  });\n\n  return cuisineResponse.data.restaurants;\n}\n","import React, { Component } from \"react\";\n\nclass Restaurant extends Component {\n  render() {\n    return (\n      <div className=\"col-sm-4\">\n        <a href={this.props.url}>\n          <div\n            className=\"card\"\n            style={{\n              backgroundImage: `url(${this.props.image})`,\n              backgroundSize: \"cover\"\n            }}\n          />\n\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.name}</h5>\n            <h6 className=\"card-description\">{this.props.location}</h6>\n            <p>{this.props.cuisines}</p>\n          </div>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Restaurant;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Restaurant from \"./Restaurant\";\nimport \"../css/Restaurants.css\";\nimport { Link } from \"react-router-dom\";\nimport { getCuisinesApi } from \"../Api\";\n\nclass Restaurants extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { query: \"\", restaurants: [] };\n  }\n\n  async componentDidMount() {\n    let response = await axios({\n      method: \"get\",\n      url: `https://developers.zomato.com/api/v2.1/search?city_id=306&collection_id=${this.props.match.params.id}`,\n      headers: { \"user-key\": \"b26f02984b714751b6c2f50247e4b9a8\" }\n    });\n\n    this.setState({ restaurants: response.data.restaurants });\n  }\n\n  async getCuisines() {\n    let data = await getCuisinesApi(this.state.query);\n    this.props.getCuisinesData(data);\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n  };\n\n  handleInputChange = e => {\n    this.setState(\n      {\n        [e.target.name]: e.target.value\n      },\n      () => {\n        if (this.state.query && this.state.query.length > 1) {\n          if (this.state.query.length % 2 === 0) {\n            this.getCuisines();\n          }\n        }\n      }\n    );\n  };\n  render() {\n    const restaurantsCollection = this.state.restaurants.map(one => (\n      <Restaurant\n        name={one.restaurant.name}\n        image={one.restaurant.featured_image}\n        key={one.restaurant.id}\n        cuisines={one.restaurant.cuisines}\n        location={one.restaurant.location.locality_verbose}\n        url={one.restaurant.url}\n      />\n    ));\n    return (\n      <div>\n        <div id=\"restaurants-header-section\" className=\"restaurants-header\">\n          <div className=\"homepage-text\">\n            <div className=\"homepage-text-background\">\n              <h1>EXPLORE</h1>\n              <p>Find your favorite cuisine</p>\n              <p id=\"cuisines-count\">\n                Italian, Indian, Thai, Asian, Chinese, American, Mexican...\n              </p>\n              <form onSubmit={this.handleSubmit}>\n                <div className=\"input-group mb-3\">\n                  <input\n                    type=\"text\"\n                    name=\"query\"\n                    className=\"homepage-input\"\n                    placeholder=\"Search for wanted cuisine...\"\n                    aria-label=\"Recipient's username\"\n                    aria-describedby=\"button-addon2\"\n                    onChange={this.handleInputChange}\n                    value={this.state.query}\n                  />\n\n                  <div>\n                    <Link\n                      to={{\n                        pathname: \"/cuisines\",\n                        state: {\n                          query: this.state.query\n                        }\n                      }}\n                    >\n                      <button\n                        className=\"btn btn-danger\"\n                        type=\"button\"\n                        id=\"homepage-button\"\n                      >\n                        Search\n                      </button>\n                    </Link>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"box\">\n          <a href=\"#restaurants-section\">\n            <span />\n          </a>\n          <a href=\"#restaurants-section\">\n            <span />\n          </a>\n          <a href=\"#restaurants-section\">\n            <span />\n          </a>\n        </div>\n\n        <div\n          id=\"restaurants-section\"\n          className=\"container-fluid restaurants-collection\"\n        >\n          <div className=\"row restaurants-collection-row\">\n            {restaurantsCollection}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(Restaurants);\n","import React, { Component } from \"react\";\n\nclass Card extends Component {\n  render() {\n    return (\n      <div className=\"col-sm-4\">\n        <a href={`/restaurants/${this.props.id}/#restaurants-header-section`}>\n          <div\n            className=\"card\"\n            style={{\n              backgroundImage: `url(${this.props.image})`,\n              backgroundSize: \"cover\"\n            }}\n          />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.title}</h5>\n            <h6 className=\"card-description\">{this.props.description}</h6>\n          </div>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"../css/Home.css\";\nimport Card from \"./Card\";\n\nclass Home extends Component {\n  static defaultProps = {\n    collections: []\n  };\n  render() {\n    const cardCollection = this.props.collections.map(card => (\n      <Card\n        title={card.collection.title}\n        id={card.collection.collection_id}\n        key={card.collection.collection_id}\n        image={card.collection.image_url}\n        description={card.collection.description}\n        url={card.collection.url}\n      />\n    ));\n\n    return (\n      <div className=\"main-header\">\n        <div className=\"homepage-text\">\n          <div className=\"homepage-text-background\">\n            <h1>FOOD PASSION</h1>\n            <p>Find the best restaurants, cafés, and bars in San Francisco</p>\n          </div>\n        </div>\n        <div className=\"home-box\">\n          <a href=\"#collections-section\">\n            <span />\n          </a>\n          <a href=\"#collections-section\">\n            <span />\n          </a>\n          <a href=\"#collections-section\">\n            <span />\n          </a>\n        </div>\n        <div\n          id=\"collections-section\"\n          className=\"container-fluid card-collection\"\n        >\n          <div className=\"row card-collection-row\">{cardCollection}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\n\nclass Cuisine extends Component {\n  render() {\n    return (\n      <div className=\"col-sm-4\">\n        <a href={this.props.url}>\n          <div\n            className=\"card\"\n            style={{\n              backgroundImage: `url(${this.props.image})`,\n              backgroundSize: \"cover\"\n            }}\n          />\n          <div className=\"card-body\">\n            <h5 className=\"card-title\">{this.props.name}</h5>\n            <h6 className=\"card-description\">{this.props.location}</h6>\n            <p>{this.props.cuisines}</p>\n          </div>\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default Cuisine;\n","import React, { Component } from \"react\";\nimport Cuisine from \"./Cuisine\";\nimport \"../css/Cuisines.css\";\n\nclass Cuisines extends Component {\n  static defaultProps = {\n    cuisines: []\n  };\n  render() {\n    const cuisines = this.props.cuisines.map(one => (\n      <Cuisine\n        name={one.restaurant.name}\n        image={one.restaurant.featured_image}\n        key={one.restaurant.id}\n        cuisines={one.restaurant.cuisines}\n        location={one.restaurant.location.locality_verbose}\n        url={one.restaurant.url}\n      />\n    ));\n    if (this.props.cuisines.length > 0) {\n      return (\n        <div className=\"cuisine-header\">\n          <div className=\"cuisine-text\">\n            <div className=\"cuisine-text-background\">\n              <h1>{this.props.location.state.query}</h1>\n            </div>\n          </div>\n          <div className=\"container-fluid cuisine-collection\">\n            <div className=\"row restaurants-collection-row\">{cuisines}</div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"container-fluid not-found-background\">\n        <div className=\"row\">\n          <div className=\"col-md cuisines-text\">\n            <h1>Please Go back</h1>\n            <h3>Try one more time!</h3>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Cuisines;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { fetchCollections, fetchRestaurants } from \"./Api\";\nimport Restaurants from \"./components/Restaurants\";\nimport Home from \"./components/Home\";\nimport Cuisines from \"./components/Cuisines\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      collections: [],\n      restaurants: [],\n      cuisines: []\n    };\n    this.getCuisinesData = this.getCuisinesData.bind(this);\n  }\n\n  async componentDidMount() {\n    let collections = await fetchCollections();\n    let restaurants = await fetchRestaurants();\n    this.setState({ collections, restaurants });\n  }\n\n  async getCuisinesData(data) {\n    this.setState({ cuisines: data });\n  }\n  render() {\n    return (\n      <BrowserRouter>\n        <Route\n          exact\n          path=\"/\"\n          render={props => (\n            <Home\n              {...props}\n              collections={this.state.collections}\n              // restaurants={this.state.restaurants}\n            />\n          )}\n        />\n        <Route\n          path=\"/restaurants/:id\"\n          render={props => (\n            <Restaurants {...props} getCuisinesData={this.getCuisinesData} />\n          )}\n        />\n        <Route\n          exact\n          path=\"/cuisines\"\n          render={props => (\n            <Cuisines {...props} cuisines={this.state.cuisines} />\n          )}\n        />\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default React.memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}